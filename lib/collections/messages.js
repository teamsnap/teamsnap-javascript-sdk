// Generated by CoffeeScript 1.11.1
exports.loadMessages = function(params, callback) {
  if (this.isId(params)) {
    params = {
      teamId: params
    };
  } else if (!(params && typeof params === 'object')) {
    throw new TSArgsError('teamsnap.loadMessages', 'must provide a teamId or query parameters');
  }
  return this.loadItems('message', params, callback);
};

exports.markMessageAsRead = function(params, callback) {
  if (typeof params === 'object') {
    params = {
      id: params.id
    };
  } else if (this.isId(params)) {
    params = {
      id: params
    };
  } else {
    throw new TSArgsError('teamsnap.markMessageAsRead', 'a message `id` or `message` object must be provided');
  }
  return this.collections.messages.exec('markMessageAsRead', params).pop().callback(callback);
};

exports.bulkDeleteMessages = function(messages, callback) {
  if (Array.isArray(messages)) {
    if (messages.length === 0) {
      throw new TSArgsError('teamsnap.bulkDeleteMessages', 'The array of messages to be deleted is empty.');
    } else if (this.isItem(messages[0], 'message')) {
      messages = {
        id: messages.map(function(message) {
          return message.id;
        })
      };
    } else if (this.isId(messages[0])) {
      messages = {
        id: messages
      };
    } else {
      throw new TSArgsError('teamsnap.bulkDeleteMessages', 'Must provide an `array` of message `ids` or `message` objects');
    }
  } else if (typeof messages === 'object' && this.isItem(messages, 'message')) {
    messages = {
      id: messages.id
    };
  } else if (this.isId(messages)) {
    messages = {
      id: messages
    };
  } else {
    throw new TSArgsError('teamsnap.bulkDeleteMessages', 'Must provide an `array` of message `ids`, an `id` or a `message` object');
  }
  return this.collections.messages.exec('bulkDelete', messages).callback(callback);
};
