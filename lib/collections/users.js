// Generated by CoffeeScript 1.11.1
exports.loadUsers = function(params, callback) {
  if (this.isId(params)) {
    params = {
      teamId: params
    };
  } else if (!(params && typeof params === 'object')) {
    throw new TSArgsError('teamsnap.loadUsers', 'must provide a teamId or query parameters');
  }
  return this.loadItems('user', params, callback);
};

exports.loadMe = function(callback) {
  return this.collections.root.queryItem('me', callback);
};

exports.saveUser = function(user, callback) {
  var ref;
  if (!user) {
    throw new TSArgsError('teamsnap.saveUser', "`user` must be provided");
  }
  if (!this.isItem(user, 'user')) {
    throw new TSArgsError('teamsnap.saveUser', "`user.type` must be 'user'");
  }
  if (!((ref = user.email) != null ? ref.trim() : void 0)) {
    return this.reject('You must provide an email for the user.', 'email', callback);
  }
  return this.saveItem(user, callback);
};

exports.sendEmailValidation = function(params, callback) {
  if (params == null) {
    params = {};
  }
  if (Object.keys(params).length && !((params.teamId != null) && this.isId(params.teamId))) {
    throw new TSArgsError('teamsnap.sendEmailValidation', 'if a params object is used, it must contain a teamId');
  }
  return this.collections.users.exec('sendEmailValidation', params).pop().callback(callback);
};
