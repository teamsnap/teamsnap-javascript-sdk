// Generated by CoffeeScript 1.11.1
exports.loadStatisticGroups = function(params, callback) {
  if (this.isId(params)) {
    params = {
      teamId: params
    };
  } else if (!(params && typeof params === 'object')) {
    throw new TSArgsError('teamsnap.loadStatisticGroups', 'you must provide a a teamId or query parameters');
  }
  return this.loadItems('statisticGroup', params, callback);
};

exports.createStatisticGroup = function(data) {
  return this.createItem(data, {
    type: 'statisticGroup'
  });
};

exports.saveStatisticGroup = function(statisticGroup, callback) {
  if (!statisticGroup) {
    throw new TSArgsError('teamsnap.saveStatisticGroup', '`statisticGroup` must be provided');
  }
  if (!this.isItem(statisticGroup, 'statisticGroup')) {
    throw new TSArgsError('teamsnap.saveStatisticGroup', "`statisticGroup.type` must be 'statisticGroup'");
  }
  if (!statisticGroup.name) {
    return this.reject('You must specify a name', 'name', callback);
  }
  if (!statisticGroup.teamId) {
    return this.reject('You must specify a team', 'teamId', callback);
  }
  return this.saveItem(statisticGroup, callback);
};

exports.deleteStatisticGroup = function(statisticGroup, callback) {
  if (!statisticGroup) {
    throw new TSArgsError('teamsnap.deleteStatisticGroup', '`statisticGroup` must be provided');
  }
  return this.deleteItem(statisticGroup, callback);
};

exports.reorderStatisticGroups = function(teamId, statisticGroupIds, callback) {
  var params;
  if (!this.isId(teamId)) {
    throw new TSArgsError('teamsnap.reorderStatisticGroups', '`teamId` must be provided');
  }
  if (!(statisticGroupIds && Array.isArray(statisticGroupIds))) {
    throw new TSArgsError('teamsnap.reorderStatisticGroups', 'You must provide an array of ordered Statistic Group IDs');
  }
  params = {
    teamId: teamId,
    sortedIds: statisticGroupIds
  };
  return this.collections.statisticGroups.exec('reorderStatisticGroups', params).callback(callback);
};
