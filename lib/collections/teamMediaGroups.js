// Generated by CoffeeScript 1.11.1
exports.loadTeamMediaGroups = function(params, callback) {
  if (this.isId(params)) {
    params = {
      teamId: params
    };
  } else if (!(params && typeof params === 'object')) {
    throw new TSArgsError('teamsnap.loadTeamMediaGroups', 'must provide a teamId or query parameters');
  }
  return this.loadItems('teamMediaGroup', params, callback);
};

exports.createTeamMediaGroup = function(data) {
  return this.createItem(data, {
    type: 'teamMediaGroup'
  });
};

exports.saveTeamMediaGroup = function(teamMediaGroup, callback) {
  if (!teamMediaGroup) {
    throw new TSArgsError('teamsnap.saveTeamMediaGroup', "`teamMediaGroup` must be provided");
  }
  if (!this.isItem(teamMediaGroup, 'teamMediaGroup')) {
    throw new TSArgsError('teamsnap.saveTeamMediaGroup', "`teamMediaGroup.type` must be 'teamMediaGroup'");
  }
  return this.saveItem(teamMediaGroup, callback);
};

exports.deleteTeamMediaGroup = function(teamMediaGroup, callback) {
  if (!teamMediaGroup) {
    throw new TSArgsError('teamsnap.deleteTeamMediaGroup', '`teamMediaGroup` must be provided');
  }
  return this.deleteItem(teamMediaGroup, callback);
};

exports.reorderTeamMediaGroups = function(teamId, teamMediaGroupIds, callback) {
  var params;
  if (!this.isId(teamId)) {
    throw new TSArgsError('teamsnap.reorderTeamMediaGroups', '`teamId` must be provided');
  }
  if (!(teamMediaGroupIds && Array.isArray(teamMediaGroupIds))) {
    throw new TSArgsError('teamsnap.reorderTeamMediaGroups', 'You must provide an array of ordered Team Media Group IDs');
  }
  params = {
    teamId: teamId,
    sortedIds: teamMediaGroupIds
  };
  return this.collections.teamMediaGroups.exec('reorderTeamMediaGroups', params).callback(callback);
};

exports.facebookShareTeamMediaGroup = function(teamMediaGroupId, facebookPageId, isSuppressedFromFeed, albumName, callback) {
  var params;
  if (typeof facebookPageId === 'boolean') {
    callback = albumName;
    albumName = isSuppressedFromFeed;
    isSuppressedFromFeed = facebookPageId;
    facebookPageId = null;
  }
  if (typeof albumName === 'function') {
    callback = albumName;
  }
  if (facebookPageId != null) {
    facebookPageId = parseInt(facebookPageId);
  }
  if (this.isItem(teamMediaGroupId, 'teamMedium')) {
    teamMediaGroupId = teamMediaGroup.id;
  }
  if (!((isSuppressedFromFeed != null) && typeof isSuppressedFromFeed === 'boolean')) {
    throw new TSArgsError('teamsnap.facebookShareMediaGroup', 'must include boolean isSuppressedFromFeed');
  }
  params = {
    teamMediaGroupId: teamMediaGroupId,
    facebookPageId: facebookPageId,
    albumName: albumName,
    isSuppressedFromFeed: isSuppressedFromFeed
  };
  return this.collections.teamMediaGroups.exec('facebookShareTeamMediaGroup', params).pop().callback(callback);
};
