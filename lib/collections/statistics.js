// Generated by CoffeeScript 1.11.1
exports.loadStatistics = function(params, callback) {
  if (this.isId(params)) {
    params = {
      teamId: params
    };
  } else if (!(params && typeof params === 'object')) {
    throw new TSArgsError('teamsnap.loadStatistics', 'must provide a teamId or query parameters');
  }
  return this.loadItems('statistic', params, callback);
};

exports.createStatistic = function(data) {
  return this.createItem(data, {
    type: 'statistic'
  });
};

exports.saveStatistic = function(statistic, callback) {
  if (!statistic) {
    throw new TSArgsError('teamsnap.saveStatistic', '`statistic` must be provided');
  }
  if (!this.isItem(statistic, 'statistic')) {
    throw new TSArgsError('teamsnap.saveStatistic', "`statistic.type` must be 'statistic'");
  }
  if (!statistic.name) {
    return this.reject('You must specify a name.', 'name', callback);
  }
  if (!statistic.acronym) {
    return this.reject('You must specify an acronym.', 'acronym', callback);
  }
  if (!statistic.teamId) {
    return this.reject('You must choose a team.', 'teamId', callback);
  }
  return this.saveItem(statistic, callback);
};

exports.deleteStatistic = function(statistic, callback) {
  if (!statistic) {
    throw new TSArgsError('teamsnap.deleteStatistic', '`statistic` must be provided');
  }
  return this.deleteItem(statistic, callback);
};

exports.reorderStatistics = function(teamId, statisticIds, callback) {
  var params;
  if (!this.isId(teamId)) {
    throw new TSArgsError('teamsnap.reorderStatistics', '`teamId` must be provided');
  }
  if (!(statisticIds && Array.isArray(statisticIds))) {
    throw new TSArgsError('teamsnap.reorderStatistics', 'You must provide an array of ordered Statistic IDs');
  }
  params = {
    teamId: teamId,
    sortedIds: statisticIds
  };
  return this.collections.statistics.exec('reorderStatistics', params).callback(callback);
};
