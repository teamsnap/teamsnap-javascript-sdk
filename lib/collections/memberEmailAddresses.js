// Generated by CoffeeScript 1.11.1
exports.INVITED_STATES = ["new", "new_user", "existing_user"];

exports.loadMemberEmailAddresses = function(params, callback) {
  if (this.isId(params)) {
    params = {
      teamId: params
    };
  } else if (!(params && typeof params === 'object')) {
    throw new TSArgsError('teamsnap.loadMemberEmailAddresses', 'must provide a teamId or query parameters');
  }
  return this.loadItems('memberEmailAddress', params, callback);
};

exports.createMemberEmailAddress = function(data) {
  return this.createItem(data, {
    type: 'memberEmailAddress',
    receivesTeamEmails: true
  });
};

exports.inviteMemberEmailAddresses = function(options, callback) {
  if (!options.memberEmailAddressIds) {
    throw new TSArgsError('teamsnap.inviteMemberEmailAddresses', 'options.memberEmailAddressIds is required.');
  }
  if (!options.memberId) {
    throw new TSArgsError('teamsnap.inviteMemberEmailAddresses', 'options.memberId is required.');
  }
  if (!options.teamId) {
    throw new TSArgsError('teamsnap.inviteMemberEmailAddresses', 'options.teamId is required.');
  }
  if (!options.notifyAsMemberId) {
    throw new TSArgsError('teamsnap.inviteMemberEmailAddresses', 'options.notifyAsMemberId is required.');
  }
  return this.collections.memberEmailAddresses.exec('invite', options).pop().callback(callback);
};

exports.saveMemberEmailAddress = function(memberEmailAddress, callback) {
  if (!memberEmailAddress) {
    throw new TSArgsError('teamsnap.saveMemberEmailAddress', '`memberEmailAddress` must be provided');
  }
  if (!this.isItem(memberEmailAddress, 'memberEmailAddress')) {
    throw new TSArgsError('teamsnap.saveMemberEmailAddress', "`memberEmailAddress.type` must be 'memberEmailAddress'");
  }
  if (!memberEmailAddress.memberId) {
    return this.reject('You must choose a member.', 'memberId', callback);
  }
  return this.saveItem(memberEmailAddress, callback);
};

exports.deleteMemberEmailAddress = function(memberEmailAddress, callback) {
  if (!memberEmailAddress) {
    throw new TSArgsError('teamsnap.deleteMemberEmailAddress', '`memberEmailAddress` must be provided');
  }
  return this.deleteItem(memberEmailAddress, callback);
};
